Description: Root Stack, contains all the resources needed for the application
Transform: AWS::Serverless-2016-10-31

Parameters:
  AmplifyStage:
    Type: String
  Environment:
    Type: String
  S3StoreItemImagesName:
    Type: String
    Default: "lostnfound-store-item-images"

Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowMethods: "'GET,POST,DELETE,OPTIONS,PUT'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"

Resources:
  # ------------------------------ START S3  creation------------------------------  #

  S3StoreItemImages:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "${Environment}-${S3StoreItemImagesName}"
  S3StoreItemImagesPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3StoreItemImages
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
            Resource:
              - !Sub arn:aws:s3:::${Environment}-${S3StoreItemImagesName}/*
  # Upload Image Function
  UploadImageFunction:
    DependsOn: 
      - S3StoreItemImages
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
      CodeUri: UploadImageFunction/
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref S3StoreItemImages
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        UploadImageFunctionApiResource:
          Type: Api
          Properties:
            Path: /Image
            Method: Post
            RestApiId: !Ref ServerlessRestApi
  # ------------------------------ END S3  creation------------------------------  #

  # ------------------------------ START Function  creation------------------------------  #
  # Create
  CreateItemFunction:
    DependsOn: 
      - ItemTable
      - S3StoreItemImages
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
      CodeUri: CreateItemFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ItemTable
        - S3CrudPolicy:
            BucketName: !Ref S3StoreItemImages
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        CreatePreferenceApiResource:
          Type: Api
          Properties:
            Path: /Item/CreateItem
            Method: Post
            RestApiId: !Ref ServerlessRestApi
  # READ
  RetrieveItemFunction:
    DependsOn: ItemTable
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
      CodeUri: RetrieveItemFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ItemTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        RetrievePreferenceApiResource:
          Type: Api
          Properties:
            Path: /Item/RetrieveItem
            Method: Get
            RestApiId: !Ref ServerlessRestApi
  # Update
  UpdateItemFunction:
    DependsOn: ItemTable
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Ref Environment
      CodeUri: UpdateItemFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ItemTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        UpdatePreferenceApiResource:
          Type: Api
          Properties:
            Path: /Item/UpdateItem
            Method: Put
            RestApiId: !Ref ServerlessRestApi
  # Delete
  DeleteItemFunction:
    DependsOn: ItemTable
    Type: AWS::Serverless::Function
    Properties:
      Tags:
        - Key: Environment
          Value: !Ref Environment
      CodeUri: DeleteItemFunction/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ItemTable
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        DeletePreferenceApiResource:
          Type: Api
          Properties:
            Path: /Item/DeleteItem
            Method: delete
            RestApiId: !Ref ServerlessRestApi
  # ------------------------------ START Fcuntion  creation------------------------------  #
  
  # ------------------------------ START Preference Table creation------------------------------  #
  ItemTable:
    UpdateReplacePolicy: Retain
    Type: AWS::DynamoDB::Table
    DeletionPolicy: "Delete"
    Properties:
      SSESpecification:
        SSEEnabled: false
      TableName: ItemTable
      AttributeDefinitions:
        - AttributeType: S
          AttributeName: itemId
      ContributorInsightsSpecification:
        Enabled: false
      BillingMode: PAY_PER_REQUEST
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      WarmThroughput:
        ReadUnitsPerSecond: 12000
        WriteUnitsPerSecond: 4000
      KeySchema:
        - KeyType: HASH
          AttributeName: itemId
      DeletionProtectionEnabled: false
      TableClass: STANDARD
      Tags:
        - Key: Environment
          Value: !Ref Environment

      TimeToLiveSpecification:
        Enabled: false
  # ------------------------------ END Preference Table creation------------------------------  #
  # ------------------------------  START Amplify Stack ------------------------------  #
  AutomationServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 
            - amplify.amazonaws.com
            - !Sub "amplify.${AWS::Region}.amazonaws.com"
          Action: sts:AssumeRole
      # ManagedPolicyArns:
      # - arn:aws:iam::aws:policy/service-role/AmazonSSMAutomationRole
      # RoleName: AutomationServiceRole
      # Policies:
      # - PolicyName: passrole
      #   PolicyDocument:
      #     Version: '2012-10-17'
      #     Statement:
      #     - Effect: Allow
      #       Action:
      #       - iam:PassRole
      #       Resource:
      #       - !GetAtt ManagedInstanceRole.Arn
  AmplifyApp:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Amplify::App"
    DeletionPolicy: "Delete"
    DependsOn: AutomationServiceRole
    Properties:
      IAMServiceRole: !GetAtt AutomationServiceRole.Arn
      Tags:
        - Key: Stage
          Value: !Ref Environment
      AccessToken: "{{resolve:secretsmanager:PipelineUserSecretKey-t5mbKk44PCme:SecretString:github_access_key}}"
      Repository: !Sub
        - "https://github.com/${GithubOwner}/${AppRepositoryName}"
        - GithubOwner: !ImportValue GithubOwnerOutput
          AppRepositoryName: !ImportValue AppRepositoryNameOutput
      # EnvironmentVariables:
      # - Name: REACT_APP_ADMIN_SECRET_KEY_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ADMIN_SECRET_KEY_ID}}'
      # - Name: REACT_APP_GOOGLE_AUTH_PROVIDER_CLIENT_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_GOOGLE_AUTH_PROVIDER_CLIENT_ID}}'
      # - Name: REACT_APP_COGNITO_CLIENT_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_CLIENT_ID}}'
      # - Name: AMPLIFY_MONOREPO_APP_ROOT
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:AMPLIFY_MONOREPO_APP_ROOT}}'
      # - Name: REACT_APP_COGNITO_AUTH_FLOW
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_AUTH_FLOW}}'
      # - Name: REACT_APP_REDIRECT_URI
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_REDIRECT_URI}}'
      # - Name: AMPLIFY_DIFF_DEPLOY
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:AMPLIFY_DIFF_DEPLOY}}'
      # - Name: REACT_APP_ADMIN_ACCESS_KEY_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ADMIN_ACCESS_KEY_ID}}'
      # - Name: REACT_APP_COGNITO_REFRESH_TOKEN_FLOW
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_REFRESH_TOKEN_FLOW}}'
      # - Name: REACT_APP_AWS_REGION
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_AWS_REGION}}'
      # - Name: REACT_APP_FACEBOOK_SSO_APP_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_FACEBOOK_SSO_APP_ID}}'
      # - Name: REACT_APP_ECOWISE_API_URL
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ECOWISE_API_URL}}'
      # - Name: REACT_APP_COGNITO_OAUTH_DOMAIN
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_OAUTH_DOMAIN}}'
      # - Name: REACT_APP_COGNITO_SMS_MFA_CHALLENGE
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_COGNITO_SMS_MFA_CHALLENGE}}'
      # - Name: REACT_APP_USER_POOL_ID
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_USER_POOL_ID}}'
      # - Name: REACT_APP_ECOWISE_PREFERENCE_API_URL
      #   Value: '{{resolve:secretsmanager:AmplifyAppEnvVar:SecretString:REACT_APP_ECOWISE_PREFERENCE_API_URL}}'
      Platform: "WEB"
      EnableBranchAutoDeletion: false
      BuildSpec: |
        version: 1
        applications:
          - frontend:
              phases:
                preBuild:
                  commands:
                    - npm ci --cache .npm --prefer-offline
                build:
                  commands:
                    - npm run build
              artifacts:
                baseDirectory: build
                files:
                  - "**/*"
              cache:
                paths:
                  - .npm/**/*
            appRoot: front-end
      CustomRules:
        - Status: "404-200"
          Target: "/index.html"
          Source: "/<*>"
        - Status: "200"
          Target: "/index.html"
          Source: "</^[^.]+$|\\.(?!(css|gif|ico|jpg|jpeg|webp|js|png|txt|svg|woff|ttf|map|json)$)([^.]+$)/>"
      CacheConfig:
        Type: "AMPLIFY_MANAGED"
      CustomHeaders: ""
      Name: "ClaimIt"

  AmplifyBranch:
    UpdateReplacePolicy: "Retain"
    Type: "AWS::Amplify::Branch"
    DeletionPolicy: "Retain"
    DependsOn:
      - AmplifyApp
    Properties:
      Backend: {}
      AppId: !GetAtt AmplifyApp.AppId
      EnablePullRequestPreview: false
      EnableAutoBuild: true
      EnablePerformanceMode: false
      Stage: !Ref AmplifyStage
      BranchName: "main"
      Framework: "React"
  # ------------------------------  END Amplify Stack  ------------------------------  #
